Пешечные бои

Используя библиотеку chessboardjs (https://github.com/oakmac/chessboardjs/) для визуализации шахматной доски, js библиотеку chess.js для правил и ходов (https://github.com/jhlywa/chess.js), сделать единый html файл с js/css, интерфейс оптимизированный как для компьютера, так и для мобильного телефона, в котором можно было бы вдвоём играть в пешечные бои. Это игра, основанная на шахматах. У обоих игроков есть у каждого только по 8 пешек на 2й и 7й горизонталях. Ходят пешки по стандартным пешечным правилам, включая "взятия на проходе". Победит тот, кто первым дойдёт пешкой до последней линии и превратит пешку в ферзя. 



техническое описание что внутри:
* single page application, html+js+css
* библиотека 



## структура
Вынести js код в отдельные файлы: в отдельном файле - управление компьютером, методы makeAiMove, findBestMove, minimax, evaluateBoard. В другом файле - остальной js код
Нужна более удобная структура для расширения логики игры компьютера — внутри метода evaluateBoard вынеси расчёт аспектов (факторов) в разные функции. Общий метод должен по максимуму содержать только вызовы других функций, сам вычислять только итоговое score значение. Желательно, чтобы вычисление score было явно написано в коде в одном месте, одной строке, чтобы было наглядно и можно было бы удобно подбирать/менять ВЕСА у факторов.

## интерфейс

pgn - это текстовая запись ходов. Метод game.pgn() возвращает строку с расширенным форматом вида '[SetUp "1"]\n[FEN "8/pppppppp/8/8/8/8/PPPPPPPP/8 w - - 0 1"]\n\n1. d3 d5 2. e4 c6 3. exd5 cxd5 4. c4 e6 5. cxd5 exd5 6. b4 b5 7. a3 f5 8. f3 g5 9. g3 d4 10. f4 g4 11. h3 gxh3 12. g4 h2 13. gxf5 a6 14. f6 h6 15. f7 h1=Q', нужно написать функцию, которая извлечёт только сами ходы: 1. d3 d5 2. e4 c6 3. exd5 cxd5


- после каждого хода - обновлять в url cgi параметр (якорь?) moves, в котором будут ходы (pgn выше)
- при загрузке страницы, в котой в урле заданы moves - нужно загрузить игру из переданного состояния. Таким образом, при обновлении страницы, прогресс игры сохранится
- также потребуется добавить в cgi параметр режим игры (player white, player black, 2 players) - если параметра нет, то базовый режим - игрок белыми против компьютера чёрными
- а также сложность AI (aiDifficulty)
- требуется, помимо status, выводить ещё pgn. Обрати внимание, что в коде есть только один <div id="statusbar">, нужно добавить ещё один для отображения ходов. Ходы можно отображать под доской. Таким образом, чтобы ходы можно было бы скопировать, отправить другому человеку, тот бы вставил в параметр moves и загрузил бы игру. 
- таким образом, игру можно было бы вставить как iframe на другом сайте, настроив расположение пешек на доске, чтобы, например, писать обучающие статьи с интеграцией интерактивной доски


## сохранение результатов
В момент, когда игра завершена (is_finish()), нужно сохранить результат в google spreadsheets. У меня уже настроен anonymous web app, которая сохранит данные, которые придут на вход в строку таблицы. Для этого нужно передать объект, содержащий поля: "fielddate, usertime, playerw, playerb, result, pgn, city, region, country, isp, ip, browserName, browserVersion, browserType, platform, userAgent". Подробное описание полей:

* fielddate: дата в формате YYYY-MM-DD
* usertime: HH:MM локальное время у пользователя на устройстве
* playerw: player - если за белых играл человек, или цифра - aiDifficulty - сложность компьютера
* playerb: player - если за чёрных играл человек, или цифра - aiDifficulty - сложность компьютера
* result: wQ, bQ - если какой-то из сторон первым стал ферзём. w, b - если противник не может ходить
* pgn: ходы в партии. В формате 1. d3 d5 2. e4 c6 — обрати внимание, что функция game.png() возвращает расширенный формат, из которого нужно убрать лишнюю мета-информацию и переносы строк '[SetUp "1"]\n[FEN "8/pppppppp/8/8/8/8/PPPPPPPP/8 w - - 0 1"]\n\n1. d3 d5 2. e4 c6 3. exd5 cxd5 4. c4 e6 5. cxd5 exd5 6. b4 b5 7. a3 f5 8. f3 g5 9. g3 d4 10. f4 g4 11. h3 gxh3 12. g4 h2 13. gxf5 a6 14. f6 h6 15. f7 h1=Q'
* city, region, country, isp, ip -> получить через jsonp запрос к http://ipinfo.io (сам запрос можно сделать сразу в момент загрузки страницы)
* browserName, browserVersion, browserType, platform (navigator.platform), userAgent - информация про браузер пользователя. Написать функцию, которая распарсит userAgent и достанет browserName, browserVersion, browserType (desktop, mobile - iOS, Android)


Примечание - в ссылке script.google.com/macros зашит личный токен. Это не очень безопасно. Для большей надёжности, вся строка в константе будет лежать в формате base64-encoded. В ответе вместо ссылки нужно задать XXXXXX, а в коде реализовать base64 decode, прежде чем делать web запрос с сохранением результатов

## итак, текущий файл с кодом:
```
...
```




Оценка матчей:

http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+h4+a5+2.+g4+b5+3.+f4+c5+4.+e4+f6+5.+d3+g6+6.+f5+h5


http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+a4+a5+2.+c3+h5+3.+b4+axb4+4.+cxb4+d5+5.+d3+g5+6.+e4+d4+7.+g3+e5+8.+f4+exf4+9.+gxf4+gxf4+10.+a5+h4+11.+b5+c6+12.+bxc6+bxc6

http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+a4+a5+2.+c3+h5+3.+b4+axb4+4.+cxb4+d5+5.+d3+g5+6.+e4+d4+7.+g3+e5+8.+f4+exf4+9.+gxf4+gxf4+10.+a5+h4+11.+b5+c6



Пешечные бои:


http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+e4+a5+2.+f4+b5+3.+d4+e6+4.+g4+d5
* если пешка после хода становится на 5ю и 4ю диагональ - то может брать на проходе
* если ходим другими пешками, то взятие dxe4 ведёт к победе соперника
* при прочих равных - если есть возможность сделать квадратик 3x3 - то делать. Или избегать его с противоположной стороны



* фактор: чем ближе к финишу, тем больше вес пешки
* одна пешка может блокировать 2, или блокировать 3 пешки
    * хорошо ставить пешку перед треугольником - заблокировать 3 пешки
    https://disk.yandex.ru/i/ubCNV80nucTO8A
    * очень хорошо блокировать и самому не идти под блок
    * две против одной - хорошо 
* в дебюте хорошо ходит на 2 клетки вперёд блокировать сразу 3 клетки: максимизировать число ходов, которые ограничивает противнику
* резервные ходы - лучше держать до конца

http://127.0.0.1:8080/?gameMode=playerb&aiDifficulty=2&moves=1.+b3+d5+2.+a3+e5+3.+a4+f5+4.+d3+g5+5.+d4+e4+6.+b4+g4+7.+c3+c6+8.+g3+b6+9.+a5+b5+10.+f3+exf3+11.+exf3+gxf3+12.+a6+f2+13.+c4
* сейчас алгоритм жадный - хочет сначала больше заработать очков, прежде чем превращаться в ферзя
    * как будто нужно - если есть возможность превратиться в ферзя, то штрафовать любой другой ход

!!! http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+a3+h6+2.+a4+e6+3.+a5+b5+4.+a6+c6+5.+b3+d6+6.+b4+d5+7.+c3
    * почему чёрный ходит на c5?


+++ бонус за блокировку противника Infinity - это победа

* идея: сводить к ничье, когда никто не может походить

взятия:
* шило на мыло не меняем https://disk.yandex.ru/i/TeMRsJXPjmbXkA

* http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+c4+a5+2.+d4+f5+3.+f4+b6+4.+a4+c5+5.+d5+e6 нельзя не походить пешкой d5 - приведёт либо к поражению, либо к блоку 1 vs 2


* http://127.0.0.1:8080/?gameMode=playerw&aiDifficulty=2&moves=1.+c4+a5+2.+d4+f5+3.+f4+b6+4.+a4+c5+5.+d5+e6+6.+d6+g6+7.+h3+h6+8.+g3+g5
    хороший ход h4